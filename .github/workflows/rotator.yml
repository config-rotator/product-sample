name: Rotate  (Dispatch Trigger)

on:
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repo to rotate (owner/repo)'
        required: true
        type: string
        # Accessible at the caller as ${{github.repository}}
      event_type:
        description: 'Event type (branch|tag)'
        required: true
        type: string
        # Accessible at the caller as ${{github.ref_type}}
      event_name:
        description: 'Actual name of the branch or tag '
        required: true
        type: string
        # Accessible at the caller as ${{github.ref_name}}
      sha:
        description: 'SHA of the commit to lock in the manifest'
        required: true
        type: string
        # Accessible at the caller as ${{github.sha}}

# Add this permissions block
permissions:
  contents: write  # This grants write access to repository contents


jobs:
  lock-manifest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4       
        with:
          fetch-depth: 0
          ref: main
          # Fetch all history for all branches and tags
          # This is required to checking the manifest to the repo
      
      - name: Set up git config
        # This is required to checking the manifest to the repo
        run: |
          git config --global user.name "GitHub Action: rotator"
          git config --global user.email "gh-rotator@thetechcollective.eu"
        
      - name: Ensure Python
        # assume python3 is installed, it is in ubuntu-latest, 
        # but if you are using a different image, you may need to install it
        run: |
          command -v python3 || { echo "Python3 is not installed"; exit 1; }

      - name: Install gh extension 'thetechcollective/rotator'
        # Visit https://github.com/thetechcollective/gh-rotator for more information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh extension install thetechcollective/gh-rotator


      - name: Receive and Use Trigger Data from Inputs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Update manifest for **${{ inputs.triggering_repo }}**"                                                                                               >> $GITHUB_STEP_SUMMARY
          echo "Triggering event was: **\`${{ inputs.event_type }}:${{ inputs.event_name }}\`**"                                                                     >> $GITHUB_STEP_SUMMARY
          echo "Triggering commit was: [**\`${{ inputs.sha }}\`**](https://github.com/${{ inputs.repo }}/commit/${{ inputs.sha }})"                                  >> $GITHUB_STEP_SUMMARY

          # Set env vars from inputs 
          echo "COMPONENT_REPO=${{ inputs.repo }}"                   >> $GITHUB_ENV
          echo "COMPONENT_EVENT_TYPE=${{ inputs.event_type }}"       >> $GITHUB_ENV
          echo "COMPONENT_EVENT_NAME=${{ inputs.event_name }}"       >> $GITHUB_ENV
          echo "COMPONENT_SHA=${{ inputs.sha }}".                    >> $GITHUB_ENV
          echo CONFIGURATION=$( gh rotator config --repo ${{ inputs.repo }} --event-type ${{ inputs.event_type }} --event-name ${{ inputs.event_name }} ) >> $GITHUB_ENV

          gh rotator lock --repo ${{ inputs.repo }} --event-type ${{ inputs.event_type }} --event-name ${{ inputs.event_name }} --sha ${{ inputs.sha }} --verbose

      - name: Commit and Push Manifest Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
        
          git add -A
          git commit -m "Update manifest for ${{ inputs.repo }}
            Triggering event was: '${{ inputs.event_type }}:${{ inputs.event_name }}'
            Triggering commit was was https://github.com/${{ inputs.repo }}/commit/${{ inputs.sha }} "
          git push origin main

          echo "Successfully updated the manifest for the '${{ env.CONFIGURATION }}' configuration"  >> $GITHUB_STEP_SUMMARY

  deploy-iac:
    runs-on: ubuntu-latest
    needs: lock-manifest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4       

      - name: Ensure Python
        # assume python3 is installed, it is in ubuntu-latest, 
        # but if you are using a different image, you may need to install it
        run: |
          command -v python3 || { echo "Python3 is not installed"; exit 1; }

      - name: Install gh extension 'thetechcollective/rotator'
        # Visit https://github.com/thetechcollective/gh-rotator for more information
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh extension install thetechcollective/gh-rotator

      - name: Do Your Thing
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Do your thing here, e.g. deploy the manifest to a cloud provider
          # You can use the inputs from the previous job as needed
          echo "Deploying the manifest for '${{ env.CONFIGURATION }}' configuration"
          echo "Triggering event was: '${{ env.COMPONENT_EVENT_TYPE }}:${{ env.COMPONENT_EVENT_NAME }}'"
          echo "Triggering commit was was: [**\`${{ env.COMPONENT_SHA }}\`**](https://github.com/${{ env.COMPONENT_REPO }}/commit/${{ env.COMPONENT_SHA }})"

          echo "Deploying the manifest for the '${{ env.CONFIGURATION }}' configuration"  >> $GITHUB_STEP_SUMMARY
          echo "Triggering event was: '${{ env.COMPONENT_EVENT_TYPE }}:${{ env.COMPONENT_EVENT_NAME }}'"  >> $GITHUB_STEP_SUMMARY
          echo "Triggering commit was was: [**\`${{ env.COMPONENT_SHA }}\`**](https://github.com/${{ env.COMPONENT_REPO }}/commit/${{ env.COMPONENT_SHA }})"  >> $GITHUB_STEP_SUMMARY

          echo `gh rotator config --configuration ${{ env.CONFIGURATION }} >> $GITHUB_STEP_SUMMARY





